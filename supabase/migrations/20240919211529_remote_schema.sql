revoke delete on table "public"."secrets" from "anon";

revoke insert on table "public"."secrets" from "anon";

revoke references on table "public"."secrets" from "anon";

revoke select on table "public"."secrets" from "anon";

revoke trigger on table "public"."secrets" from "anon";

revoke truncate on table "public"."secrets" from "anon";

revoke update on table "public"."secrets" from "anon";

revoke delete on table "public"."secrets" from "authenticated";

revoke insert on table "public"."secrets" from "authenticated";

revoke references on table "public"."secrets" from "authenticated";

revoke select on table "public"."secrets" from "authenticated";

revoke trigger on table "public"."secrets" from "authenticated";

revoke truncate on table "public"."secrets" from "authenticated";

revoke update on table "public"."secrets" from "authenticated";

revoke delete on table "public"."secrets" from "service_role";

revoke insert on table "public"."secrets" from "service_role";

revoke references on table "public"."secrets" from "service_role";

revoke select on table "public"."secrets" from "service_role";

revoke trigger on table "public"."secrets" from "service_role";

revoke truncate on table "public"."secrets" from "service_role";

revoke update on table "public"."secrets" from "service_role";

alter table "public"."secrets" drop constraint "secrets_fcm_token_id_fkey";

alter table "public"."secrets" drop constraint "secrets_pkey";

drop index if exists "public"."secrets_pkey";

drop table "public"."secrets";

create table "public"."pairing_secrets" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "secret" character varying not null,
    "fcm_token_id" bigint not null
);


alter table "public"."pairing_secrets" enable row level security;

CREATE UNIQUE INDEX secrets_pkey ON public.pairing_secrets USING btree (id);

alter table "public"."pairing_secrets" add constraint "secrets_pkey" PRIMARY KEY using index "secrets_pkey";

alter table "public"."pairing_secrets" add constraint "secrets_fcm_token_id_fkey" FOREIGN KEY (fcm_token_id) REFERENCES fcm_tokens(id) not valid;

alter table "public"."pairing_secrets" validate constraint "secrets_fcm_token_id_fkey";

grant delete on table "public"."pairing_secrets" to "anon";

grant insert on table "public"."pairing_secrets" to "anon";

grant references on table "public"."pairing_secrets" to "anon";

grant select on table "public"."pairing_secrets" to "anon";

grant trigger on table "public"."pairing_secrets" to "anon";

grant truncate on table "public"."pairing_secrets" to "anon";

grant update on table "public"."pairing_secrets" to "anon";

grant delete on table "public"."pairing_secrets" to "authenticated";

grant insert on table "public"."pairing_secrets" to "authenticated";

grant references on table "public"."pairing_secrets" to "authenticated";

grant select on table "public"."pairing_secrets" to "authenticated";

grant trigger on table "public"."pairing_secrets" to "authenticated";

grant truncate on table "public"."pairing_secrets" to "authenticated";

grant update on table "public"."pairing_secrets" to "authenticated";

grant delete on table "public"."pairing_secrets" to "service_role";

grant insert on table "public"."pairing_secrets" to "service_role";

grant references on table "public"."pairing_secrets" to "service_role";

grant select on table "public"."pairing_secrets" to "service_role";

grant trigger on table "public"."pairing_secrets" to "service_role";

grant truncate on table "public"."pairing_secrets" to "service_role";

grant update on table "public"."pairing_secrets" to "service_role";


